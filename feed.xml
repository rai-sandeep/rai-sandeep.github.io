<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Sandeep Rai</title><subtitle>Blog and portfolio focused on Java, Spring, Cloud computing, and other technical things.</subtitle> <updated>2024-02-14T17:30:38+05:30</updated> <author> <name>Sandeep Rai</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 Sandeep Rai </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Spring WebFlux with WebSockets for Real-time Data</title><link href="/posts/spring-webflux-with-websockets-for-real-time-data/" rel="alternate" type="text/html" title="Spring WebFlux with WebSockets for Real-time Data" /><published>2023-01-22T12:10:00+05:30</published> <updated>2023-01-22T12:11:11+05:30</updated> <id>/posts/spring-webflux-with-websockets-for-real-time-data/</id> <content src="/posts/spring-webflux-with-websockets-for-real-time-data/" /> <author> <name>Sandeep Rai</name> </author> <category term="Spring WebFlux" /> <category term="WebSockets" /> <summary> Spring WebFlux with WebSockets for Real-time Data In this tutorial, we will learn how to use Spring WebFlux to stream real-time sensor data to a web client using WebSockets. We’ll start by creating a simple Spring Boot application and then implement a WebSocket endpoint to stream the sensor data. Setting up the Project To get started, we’ll create a new Spring Boot project with the WebFlux d... </summary> </entry> <entry><title>Spring WebFlux and DB2 with rxjava2-jdbc</title><link href="/posts/spring-webflux-and-db2-with-rxjava2-jdbc/" rel="alternate" type="text/html" title="Spring WebFlux and DB2 with rxjava2-jdbc" /><published>2022-08-05T12:30:00+05:30</published> <updated>2022-08-05T12:53:55+05:30</updated> <id>/posts/spring-webflux-and-db2-with-rxjava2-jdbc/</id> <content src="/posts/spring-webflux-and-db2-with-rxjava2-jdbc/" /> <author> <name>Sandeep Rai</name> </author> <category term="Spring WebFlux" /> <category term="DB2" /> <summary> 1. Overview In this article, we’re going to focus on connecting to a DB2 database from a Java Spring WebFlux application using non-blocking connection pools. We’ll use rxjava2-jdbc for this purpose. The primary reason for choosing rxjava2-jdbc is that there is no native implementation for a reactive DB2 driver in r2dbc or Spring Data R2DBC. Thankfully, rxjava2-jdbc has the ability to take a no... </summary> </entry> <entry><title>How did I Create this Blog</title><link href="/posts/how-did-i-create-this-blog/" rel="alternate" type="text/html" title="How did I Create this Blog" /><published>2022-07-10T16:40:00+05:30</published> <updated>2022-08-04T21:31:44+05:30</updated> <id>/posts/how-did-i-create-this-blog/</id> <content src="/posts/how-did-i-create-this-blog/" /> <author> <name>Sandeep Rai</name> </author> <category term="Blogging" /> <category term="Tutorial" /> <summary> This is a step by step guide on how I created this blog and how you can create yours too. Most of the content here is sourced from the Chirpy website. Before I start, let me explain why I chose GitHub Pages and Jekyll with Chirpy theme. If you are convinced already and want to skip to the tutorial, click here. Why GitHub Pages What’s better than having the source code for your blog on GitHu... </summary> </entry> </feed>
